{
  "service": {
    "service": "cms-v1",
    "serviceObject": {
      "name": "cms-v1"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "profile": "cms",
      "region": "ap-southeast-1",
      "deploymentBucket": "dev-cms-ap-southeast-1-deploy",
      "tracing": {
        "lambda": true
      },
      "httpApi": {
        "cors": true
      },
      "http": {
        "cors": true
      },
      "apiGateway": {
        "restApiRootResourceId": {
          "Fn::GetAtt": [
            "ApiGateway",
            "RootResourceId"
          ]
        },
        "restApiId": {
          "Ref": "ApiGateway"
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "environment": {
        "DYNAMODB_TABLE": "CMS",
        "LOG_DIR": "./logs",
        "USER": "sophatvathana",
        "PASS": "vsyakohrymznwcrx",
        "ACCESS_KEY": "AKIASQUBARMJU6OQU65P",
        "SECRET_ACCESS_KEY": "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",
        "BUCKET_NAME": "store-files-img",
        "BUCKET_REGION": "ap-southeast-1"
      },
      "deploymentBucketObject": {
        "name": "dev-cms-ap-southeast-1-deploy"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "AppLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cms-v1-dev-app"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "cms-v1",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cms-v1-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cms-v1-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "xray:PutTraceSegments",
                          "xray:PutTelemetryRecords"
                        ],
                        "Resource": [
                          "*"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "cms-v1",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AppLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "dev-cms-ap-southeast-1-deploy",
                "S3Key": "serverless/cms-v1/dev/1671517411886-2022-12-20T06:23:31.886Z/cms-v1.zip"
              },
              "Handler": "src/handler.routesHandlers",
              "Runtime": "nodejs14.x",
              "FunctionName": "cms-v1-dev-app",
              "MemorySize": 1024,
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "CMS",
                  "LOG_DIR": "./logs",
                  "USER": "sophatvathana",
                  "PASS": "vsyakohrymznwcrx",
                  "ACCESS_KEY": "AKIASQUBARMJU6OQU65P",
                  "SECRET_ACCESS_KEY": "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",
                  "BUCKET_NAME": "store-files-img",
                  "BUCKET_REGION": "ap-southeast-1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AppLogGroup"
            ]
          },
          "AppLambdaVersionks7yJxVHfa1DtsAWVayu78qucTWMRIvgiXDQM88A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AppLambdaFunction"
              },
              "CodeSha256": "ISkxtgLDt6LqaGHhMXuCyGE4KOOJBNvM24G8BuUI9jQ="
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGateway",
                  "RootResourceId"
                ]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGateway"
              }
            }
          },
          "ApiGatewayMethodProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGateway"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AppLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1671517405205": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGateway"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodProxyVarAny"
            ]
          },
          "AppLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AppLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ApiGateway": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "ApiGateway-cms-dev"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "dev-cms-ap-southeast-1-deploy",
            "Export": {
              "Name": "sls-cms-v1-dev-ServerlessDeploymentBucketName"
            }
          },
          "AppLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AppLambdaVersionks7yJxVHfa1DtsAWVayu78qucTWMRIvgiXDQM88A"
            },
            "Export": {
              "Name": "sls-cms-v1-dev-AppLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGateway"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-cms-v1-dev-ServiceEndpoint"
            }
          },
          "ApiGatewayRestApiId": {
            "Value": {
              "Ref": "ApiGateway"
            },
            "Export": {
              "Name": "cms-gateway:dev:rest-api-id"
            }
          },
          "ApiGatewayRestApiRootResourceId": {
            "Value": {
              "Fn::GetAtt": [
                "ApiGateway",
                "RootResourceId"
              ]
            },
            "Export": {
              "Name": "cms-gateway:dev:root-resource-id"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "bundle": {
        "linting": false
      },
      "webpack": {
        "packager": "npm",
        "packagerOptions": {},
        "webpackConfig": "node_modules/serverless-bundle/src/webpack.config.js",
        "includeModules": {
          "forceExclude": [
            "aws-sdk"
          ],
          "forceInclude": null,
          "packagePath": "package.json"
        },
        "excludeFiles": null,
        "excludeRegex": {},
        "keepOutputDirectory": false
      }
    },
    "plugins": [
      "serverless-dotenv-plugin",
      "serverless-bundle",
      "serverless-offline",
      "serverless-deployment-bucket"
    ],
    "pluginsData": {},
    "functions": {
      "app": {
        "handler": "src/handler.routesHandlers",
        "events": [
          {
            "http": {
              "path": "{proxy+}",
              "method": "any",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "cms-v1-dev-app",
        "package": {
          "artifact": ".serverless/cms-v1.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "AppLambdaVersionks7yJxVHfa1DtsAWVayu78qucTWMRIvgiXDQM88A"
      }
    },
    "resources": {
      "Resources": {
        "ApiGateway": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "ApiGateway-cms-dev"
          }
        }
      },
      "Outputs": {
        "ApiGatewayRestApiId": {
          "Value": {
            "Ref": "ApiGateway"
          },
          "Export": {
            "Name": "cms-gateway:dev:rest-api-id"
          }
        },
        "ApiGatewayRestApiRootResourceId": {
          "Value": {
            "Fn::GetAtt": [
              "ApiGateway",
              "RootResourceId"
            ]
          },
          "Export": {
            "Name": "cms-gateway:dev:root-resource-id"
          }
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "frameworkVersion": "3",
      "service": "cms-v1",
      "useDotenv": true,
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "package": {
        "individually": false,
        "artifactsS3KeyDirname": "serverless/cms-v1/dev/code-artifacts",
        "deploymentBucket": "dev-cms-ap-southeast-1-deploy",
        "artifactDirectoryName": "serverless/cms-v1/dev/1671517411886-2022-12-20T06:23:31.886Z"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": false,
    "artifactDirectoryName": "serverless/cms-v1/dev/1671517411886-2022-12-20T06:23:31.886Z",
    "artifact": ""
  }
}