frameworkVersion: "3"
service: cms-v1
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  profile: cms
  region: ap-southeast-1
  deploymentBucket:
    name: ${opt:stage}-cms-${opt:region, self:provider.region}-deploy
  tracing:
    # apiGateway: true
    lambda: true
  # logs:
  #   restApi: true
  httpApi:
    # metrics: true # Enable if you need
    cors: true
  http:
    # metrics: true # Enable if you need
    cors: true
  apiGateway:
    restApiRootResourceId:
      Fn::GetAtt:
        - ApiGateway
        - RootResourceId
    restApiId:
      Ref: ApiGateway

  #version3
  iam:
    role:
      name: cms-main-iam-roles
      statements:
        - Effect: Allow
          Action:
            - "s3:*"
          Resource:
            - "*"
        - Effect: Allow
          Action:
            - "execute-api:ManageConnections"
          Resource:
            - "arn:aws:execute-api:*:*:**/@connections/*"
        - Effect: Allow
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:BatchGetItem"
            - "dynamodb:BatchWriteItem"
            - "dynamodb:Query"
            - "dynamodb:Scan"
          Resource:
            - "*"

functions:
  app:
    handler: src/handler.routesHandlers
    events:
      - http:
          path: /{proxy+}
          method: ANY

resources:
  Resources:
    ApiGateway:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: ApiGateway-cms-${opt:stage}
  Outputs:
    ApiGatewayRestApiId:
      Value:
        Ref: ApiGateway
      Export:
        Name: cms-gateway:${opt:stage}:rest-api-id
    ApiGatewayRestApiRootResourceId:
      Value:
        Fn::GetAtt:
          - ApiGateway
          - RootResourceId
      Export:
        Name: cms-gateway:${opt:stage}:root-resource-id

custom:
  bundle:
    linting: false

package:
  individually: false

plugins:
  - serverless-dotenv-plugin
  - serverless-bundle
  - serverless-offline
  - serverless-deployment-bucket
